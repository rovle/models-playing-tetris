{
  "prompt_1_v1": {
    "instructions": "You will be given an image of a Tetris board with a game in progress. The board is represented by a grid of 10 columns and 20 rows. The empty cells are grey while the Tetrominoes come in a variety of colors: green, yellow, red, cyan, orange, purple, and pink. The game starts with a random Tetromino falling from the top of the board. You can move the falling Tetromino left, right or down, or rotate it clockwise or counterclockwise. You can also drop the Tetromino immediately to the bottom.\n\nWhen a complete row of blocks is formed, it disappears and the blocks above it fall down. Points are scored for each row that is cleared. The game ends when the blocks reach the top of the board.\n\nYour goal is to play Tetris and achieve the highest possible score by maximizing cleared lines and minimizing block gaps.\n\nThe possible moves are: \"left\", \"right\", \"down\", \"drop\", \"rotate clockwise\", and \"rotate counterclockwise\".\n\nYou should first determine which Tetromino is currently falling, then analyze the board, the arrangement of the current blocks and where the current tetromino would best slot in.\n\nStructure your response as a JSON, so as {\"tetromino\": TETROMINO, \"board_state\": BOARD_STATE, \"move_analysis\": MOVE_ANALYSIS, \"action\": ACTION} where TETROMINO is the type of the falling tetromino (\"I\", \"J\", \"L\", \"O\", \"S\", \"T\", \"Z\"), BOARD_STATE is your analysis of the current state of the board, MOVE_ANALYSIS is your analysis of which move is best to take, and ACTION is the single move you have chosen; all values in the JSON should be strings. Do not add any more keys to the JSON. Your response should start with { and end with }."
  },
  "prompt_1_multiple_actions_v1": {
    "instructions": "You will be given an image of a Tetris board with a game in progress. The board is represented by a grid of 10 columns and 20 rows. The empty cells are grey while the Tetrominoes come in a variety of colors: green, yellow, red, cyan, orange, purple, and pink. The game starts with a random Tetromino falling from the top of the board. You can move the falling Tetromino left, right or down, or rotate it clockwise or counterclockwise. You can also drop the Tetromino immediately to the bottom.\n\nWhen a complete row of blocks is formed, it disappears and the blocks above it fall down. Points are scored for each row that is cleared. The game ends when the blocks reach the top of the board.\n\nYour goal is to play Tetris and achieve the highest possible score by maximizing cleared lines and minimizing block gaps.\n\nThe possible moves are: \"left\", \"right\", \"down\", \"drop\", \"rotate clockwise\", and \"rotate counterclockwise\".\n\nYou should first determine which Tetromino is currently falling, then analyze the board, the arrangement of the current blocks and where the current tetromino would best slot in. After that you are to give a sequence of moves ending with \"drop\".\n\nStructure your response as a JSON, so as {\"tetromino\": TETROMINO, \"board_state\": BOARD_STATE, \"move_analysis\": MOVE_ANALYSIS, \"action\": ACTIONS} where TETROMINO is the type of the falling tetromino (\"I\", \"J\", \"L\", \"O\", \"S\", \"T\", \"Z\"), BOARD_STATE is your analysis of the current state of the board, MOVE_ANALYSIS is your analysis of which moves are best to take, and ACTIONS is the comma-separated list of chosen moves; all values in the JSON should be strings. Do not add any more keys to the JSON. Your response should start with { and end with }."
  },
  "augmented_board_v1": {
    "instructions": "You will be given an image of a Tetris board with a game in progress, in addition to a few augmented images of that same board, to aid your visual recognition. In the game, the board is represented by a grid of 10 columns and 20 rows. The empty cells are grey while the Tetrominoes come in a variety of colors: green, yellow, red, cyan, orange, purple, and pink. The game starts with a random Tetromino falling from the top of the board. You can move the falling Tetromino left, right or down, or rotate it clockwise or counterclockwise. You can also drop the Tetromino immediately to the bottom.\n\nWhen a complete row of blocks is formed, it disappears and the blocks above it fall down. Points are scored for each row that is cleared. The game ends when the blocks reach the top of the board.\n\nYour goal is to play Tetris and achieve the highest possible score by maximizing cleared lines and minimizing block gaps.\n\nThe possible moves are: \"left\", \"right\", \"down\", \"drop\", \"rotate clockwise\", and \"rotate counterclockwise\".\n\nYou should first determine which Tetromino is currently falling, then analyze the board, the arrangement of the current blocks and where the current tetromino would best slot in.\n\nStructure your response as a JSON, so as {\"tetromino\": TETROMINO, \"board_state\": BOARD_STATE, \"move_analysis\": MOVE_ANALYSIS, \"action\": ACTION} where TETROMINO is the type of the falling tetromino (\"I\", \"J\", \"L\", \"O\", \"S\", \"T\", \"Z\"), BOARD_STATE is your analysis of the current state of the board, MOVE_ANALYSIS is your analysis of which move is best to take, and ACTION is the single move you have chosen; all values in the JSON should be strings. Do not add any more keys to the JSON. Your response should start with { and end with }.",
    "augmentation": {
      "noise": {
        "noise_type": "gaussian",
        "noise_factor": 1
      },
      "color": {
        "brightness_factor": 1.8,
        "contrast_factor": 0.8,
        "saturation_factor": 1.5,
        "hue_factor": 30
      },
      "resize": {
        "width": 500,
        "height": 500
      },
      "rotation": {
        "angle": 7
      }
    }
  },
  "augmented_board_multiple_actions_v1": {
    "instructions": "You will be given an image of a Tetris board with a game in progress, in addition to a few augmented images of that same board, to aid your visual recognition. The board is represented by a grid of 10 columns and 20 rows. The empty cells are grey while the Tetrominoes come in a variety of colors: green, yellow, red, cyan, orange, purple, and pink. The game starts with a random Tetromino falling from the top of the board. You can move the falling Tetromino left, right or down, or rotate it clockwise or counterclockwise. You can also drop the Tetromino immediately to the bottom.\n\nWhen a complete row of blocks is formed, it disappears and the blocks above it fall down. Points are scored for each row that is cleared. The game ends when the blocks reach the top of the board.\n\nYour goal is to play Tetris and achieve the highest possible score by maximizing cleared lines and minimizing block gaps.\n\nThe possible moves are: \"left\", \"right\", \"down\", \"drop\", \"rotate clockwise\", and \"rotate counterclockwise\".\n\nYou should first determine which Tetromino is currently falling, then analyze the board, the arrangement of the current blocks and where the current tetromino would best slot in. After that you are to give a sequence of moves ending with \"drop\".\n\nStructure your response as a JSON, so as {\"tetromino\": TETROMINO, \"board_state\": BOARD_STATE, \"move_analysis\": MOVE_ANALYSIS, \"action\": ACTIONS} where TETROMINO is the type of the falling tetromino (\"I\", \"J\", \"L\", \"O\", \"S\", \"T\", \"Z\"), BOARD_STATE is your analysis of the current state of the board, MOVE_ANALYSIS is your analysis of which moves are best to take, and ACTIONS is the comma-separated list of chosen moves; all values in the JSON should be strings. Do not add any more keys to the JSON. Your response should start with { and end with }.",
    "augmentation": {
      "noise": {
        "noise_type": "gaussian",
        "noise_factor": 1
      },
      "color": {
        "brightness_factor": 1.8,
        "contrast_factor": 0.8,
        "saturation_factor": 1.5,
        "hue_factor": 30
      },
      "resize": {
        "width": 500,
        "height": 500
      },
      "rotation": {
        "angle": 7
      }
    }
  },
  "complex_cot_prompt_n5_single_action_v1": {
    "instructions": "You will be given an image of a Tetris board with a game in progress. The board is represented by a grid of 10 columns and 20 rows. The empty cells are grey while the Tetrominoes come in a variety of colors: green, yellow, red, cyan, orange, purple, and pink. The game starts with a random Tetromino falling from the top of the board. You can move the falling Tetromino left, right or down, or rotate it clockwise or counterclockwise. You can also drop the Tetromino immediately to the bottom.\n\nWhen a complete row of blocks is formed, it disappears and the blocks above it fall down. Points are scored for each row that is cleared. The game ends when the blocks reach the top of the board.\n\nYour goal is to play Tetris and achieve the highest possible score by maximizing cleared lines and minimizing block gaps.\n\nThe possible moves are: \"left\", \"right\", \"down\", \"drop\", \"rotate clockwise\", and \"rotate counterclockwise\".\n\nYou should first determine which Tetromino is currently falling, then analyze the board, the arrangement of the current blocks and where the current tetromino would best slot in. You should then, for each of the moves in [\"left\", \"right\", \"down\", \"drop\", \"rotate clockwise\", \"rotate counterclockwise\"], provide an analysis of that move. Finally you should choose one among those moves.\n\nStructure your response as a JSON, so as {\"tetromino\": TETROMINO, \"board_state\": BOARD_STATE, \"left\": MOVE_ANALYSIS, \"right\": MOVE_ANALYSIS, \"down\": MOVE_ANALYSIS, \"drop\": MOVE_ANALYSIS, \"rotate clockwise\": MOVE_ANALYSIS, \"rotate counterclockwise\": MOVE_ANALYSIS, \"final_analysis\": FINAL_ANALYSIS, \"action\": ACTION} where TETROMINO is the type of the falling tetromino (\"I\", \"J\", \"L\", \"O\", \"S\", \"T\", \"Z\"); BOARD_STATE is your analysis of the current state of the board; MOVE_ANALYSIS are you analyses for each of the moves; FINAL_ANALYSIS is the final analysis in which based on previous analyses, you choose the move; and ACTION is the single move you have chosen; all values in the JSON should be strings. Do not add any more keys to the JSON. Your response should start with { and end with }."
  },
  "complex_cot_prompt_n5_multiple_actions_v1": {
    "instructions": "You will be given an image of a Tetris board with a game in progress. The board is represented by a grid of 10 columns and 20 rows. The empty cells are grey while the Tetrominoes come in a variety of colors: green, yellow, red, cyan, orange, purple, and pink. The game starts with a random Tetromino falling from the top of the board. You can move the falling Tetromino left, right or down, or rotate it clockwise or counterclockwise. You can also drop the Tetromino immediately to the bottom.\n\nWhen a complete row of blocks is formed, it disappears and the blocks above it fall down. Points are scored for each row that is cleared. The game ends when the blocks reach the top of the board.\n\nYour goal is to play Tetris and achieve the highest possible score by maximizing cleared lines and minimizing block gaps.\n\nThe possible moves are: \"left\", \"right\", \"down\", \"drop\", \"rotate clockwise\", and \"rotate counterclockwise\".\n\nYou should first determine which Tetromino is currently falling, then analyze the board, the arrangement of the current blocks and where the current tetromino would best slot in. You should then propose five sequences of moves, each ending with \"drop\", and provide analysis of each sequence. Finally you should provide the final analysis, and based on it choose one among those sequences.\n\nStructure your response as a JSON, so as {\"tetromino\": TETROMINO, \"board_state\": BOARD_STATE, \"preliminary_analysis\": PRELIMINARY_ANALYSIS, \"action_proposal_1\" : ACTIONS, \"analysis_of_actions_1\" : MOVES_ANALYSIS, \"action_proposal_2\" : ACTIONS, \"analysis_of_actions_2\" : MOVES_ANALYSIS, \"action_proposal_3\" : ACTIONS, \"analysis_of_actions_3\" : MOVES_ANALYSIS, \"final_analysis\": FINAL_ANALYSIS, \"action\": ACTIONS_FINAL} where TETROMINO is the type of the falling tetromino (\"I\", \"J\", \"L\", \"O\", \"S\", \"T\", \"Z\"); BOARD_STATE is your analysis of the current state of the board; PRELIMINARY_ANALYSIS is the preliminary analysis of which moves might be the best; each ACTIONS a sequence of moves, each ending with \"drop\"; each MOVES_ANALYSIS is an analysis of the preceding moves; FINAL_ANALYSIS is the final analysis in which you decide for the sequence of moves; and ACTIONS_FINAL is the sequence of actions you ultimately choose; all values in the JSON should be strings. Do not add any more keys to the JSON. Your response should start with { and end with }."
  }
 }
